# This is a basic workflow to help you get started with Actions

name: MuleSoft deployment with GitHub Actions CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
#   workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Cache
        uses: actions/cache@v2.1.5
        with:
    # A list of files, directories, and wildcard patterns to cache and restore
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles(‘**/pom.xml’) }}
          restore-keys: |
              ${{ runner.os }}-maven-
      - name: Setup Java JDK
        uses: actions/setup-java@v2.1.0
        with:
    # The Java version to set up. Takes a whole or semver Java version. See examples of supported syntax in README file
          java-version: 1.8   

      # Runs a single command using the runners shell
      - name: Build
        run: mvn -B package –file pom.xml

      # Runs a set of commands using the runners shell
      - name: Artifact file name with commit hash
        run: |
          artifactName1=$(ls target/*.jar | head -1)
          commitHash=$(git rev-parse –short “$GITHUB_SHA”)
          artifactName2=$(ls target/*.jar | head -1 | sed “s/.jar/.$commitHash.jar/g”)
          mv $artifactName1 $artifactName2
          
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.3
        with:
          # Artifact name
          name: build_artifact
          # A file, directory or wildcard pattern that describes what to upload
          path: target/*.jar
  deploy:
    needs: build
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Cache
        uses: actions/cache@v2.1.5
        with:
    # A list of files, directories, and wildcard patterns to cache and restore
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles(‘**/pom.xml’) }}
          restore-keys: |
              ${{ runner.os }}-maven-
      - name: Download a Build Artifact
        uses: actions/download-artifact@v2.0.9
        with:
        # Artifact name
          name: build_artifact
          
      - name: Deploy to Anypoint Platform
        env:
          USERNAME: ${{ secrets.ANYPOINT_USERNAME }}
          PASSWORD: ${{ secrets.ANYPOINT_PASSWORD }}
          
        run: |
          artifactName=$(ls *.jar | head -1)
          mvn mule:deploy -Dmule.artifact=$artifactName -Dusername=$USERNAME -Dpassword=$PASSWORD
